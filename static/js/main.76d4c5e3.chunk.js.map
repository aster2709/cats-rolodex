{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","cat","id","alt","name","email","Cardlist","cats","map","c","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredCats","filter","m","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAGaA,EAAO,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAMG,IAAIC,GAApC,0BACHC,IAAI,QAEN,6BAAKL,EAAMG,IAAIG,OACf,4BAAIN,EAAMG,IAAII,YCNLC,EAAW,SAACR,GAAD,OACtB,qBAAKC,UAAU,YAAf,SACGD,EAAMS,KAAKC,KAAI,SAACC,GAAD,OACd,cAAC,EAAD,CAAiBR,IAAKQ,GAAXA,EAAEP,UCJNQ,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACvB,uBACEb,UAAU,SACVc,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCoCCG,G,wDAtCb,aAAe,IAAD,8BACZ,gBAgBFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAftC,EAAKC,MAAQ,CACXd,KAAM,GACNW,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,EAAKT,SAAS,CAAEV,KAAMmB,S,oBAQ5B,WAAU,IAAD,EACuBC,KAAKN,MAA3Bd,EADD,EACCA,KAAMW,EADP,EACOA,YACRU,EAAerB,EAAKsB,QACxB,SAACC,GAAD,OACEA,EAAE1B,KAAK2B,cAAcC,SAASd,EAAYa,gBAC1CD,EAAEzB,MAAM0B,cAAcC,SAASd,EAAYa,kBAE/C,OACE,sBAAKhC,UAAU,MAAf,UACE,8CACA,cAAC,EAAD,CAAWY,YAAY,cAAcC,aAAce,KAAKf,eACxD,cAAC,EAAD,CAAUL,KAAMqB,W,GAjCNK,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.76d4c5e3.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./card.styles.css\";\n\nexport const Card = (props) => (\n  <div className=\"card-container\">\n    <img\n      src={`https://robohash.org/${props.cat.id}?set=set4&size=180x180`}\n      alt=\"cat\"\n    />\n    <h2>{props.cat.name}</h2>\n    <p>{props.cat.email}</p>\n  </div>\n);\n","import React from \"react\";\nimport \"./card-list.styles.css\";\nimport { Card } from \"../card/card.component\";\n\nexport const Cardlist = (props) => (\n  <div className=\"card-list\">\n    {props.cats.map((c) => (\n      <Card key={c.id} cat={c} />\n    ))}\n  </div>\n);\n","import React from \"react\";\nimport \"./search-box.styles.css\";\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n  <input\n    className=\"search\"\n    type=\"search\"\n    placeholder={placeholder}\n    onChange={handleChange}\n  />\n);\n","import { Component } from \"react\";\nimport { Cardlist } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      cats: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => {\n        this.setState({ cats: users });\n      });\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    const { cats, searchField } = this.state;\n    const filteredCats = cats.filter(\n      (m) =>\n        m.name.toLowerCase().includes(searchField.toLowerCase()) ||\n        m.email.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Cats Rolodex</h1>\n        <SearchBox placeholder=\"search cats\" handleChange={this.handleChange} />\n        <Cardlist cats={filteredCats} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}